# ===========================================
# INVESTMENT DATA STREAM SERVICE
# ===========================================
# Основная конфигурация приложения
# Для запуска с конкретным профилем используйте:
# java -jar app.jar --spring.profiles.active=test
# java -jar app.jar --spring.profiles.active=prod

# ===========================================
# APPLICATION SETTINGS
# ===========================================
spring.application.name=investment-data-stream-service

# Server configuration
server.port=8084
server.servlet.context-path=/

# ===========================================
# PROFILE CONFIGURATION
# ===========================================
# По умолчанию используется test профиль
# Для продакшна установите: spring.profiles.active=prod
spring.profiles.active=test

# ===========================================
# DATABASE CONFIGURATION (DEFAULT)
# ===========================================
# Базовые настройки БД (переопределяются в профилях)
spring.datasource.url=jdbc:postgresql://localhost:5434/postgres?reWriteBatchedInserts=true&currentSchema=invest&timezone=Europe/Moscow
spring.datasource.username=postgres
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Базовые настройки пула соединений
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=8
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-init-sql=SET search_path TO invest, public;

# Второй пул для потоковых данных
spring.datasource.stream.url=jdbc:postgresql://localhost:5434/postgres?reWriteBatchedInserts=true&currentSchema=invest&timezone=Europe/Moscow
spring.datasource.stream.username=postgres
spring.datasource.stream.password=${DB_PASSWORD}
spring.datasource.stream.driver-class-name=org.postgresql.Driver
spring.datasource.stream.hikari.maximum-pool-size=20
spring.datasource.stream.hikari.minimum-idle=8
spring.datasource.stream.hikari.connection-timeout=30000
spring.datasource.stream.hikari.idle-timeout=600000
spring.datasource.stream.hikari.max-lifetime=1800000

# ===========================================
# JPA / HIBERNATE CONFIGURATION (DEFAULT)
# ===========================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=1000
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===========================================
# TINKOFF API CONFIGURATION (DEFAULT)
# ===========================================
# Токен API (загружается из .env файла)
tinkoff.api.token=${T_INVEST_TEST_TOKEN:${T_INVEST_PROD_TOKEN:your-token-here}}
tinkoff.api.base-url=invest-public-api.tinkoff.ru
tinkoff.api.port=443

# ===========================================
# SPRING BATCH CONFIGURATION (DISABLED)
# ===========================================
# Отключаем Spring Batch, так как он не используется
spring.batch.job.enabled=false
spring.batch.jdbc.initialize-schema=never

# ===========================================
# LOGGING CONFIGURATION (DEFAULT)
# ===========================================
# Логирование настроено в logback-spring.xml
# Настройки логирования вынесены в отдельный файл для лучшей организации